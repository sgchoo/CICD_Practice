name: Deploy Application

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1. Repository Checkout
    - name: Checkout repository
      uses: actions/checkout@v2

    # 2. Set up Node.js environment
    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '20'
    
    # 3. Install dependencies for both Next.js (web) and Nest.js (server)
    - name: Install dependencies
      run: |
        cd web
        npm install
        cd ../server
        npm install
    
    # 4. Build both Next.js (web) and Nest.js (server)
    - name: Build application
      run: |
        cd web
        npm run build
        cd ../server
        npm run build
    
    # 5. Login to DockerHub using Access Token
    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # 6. Build and Push Docker images for both services (Next.js and Nest.js)
    - name: Build and Push Docker Images
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nextjs:dev ./web
        docker build -t ${{ secrets.DOCKER_USERNAME }}/nestjs:dev ./server
        docker push ${{ secrets.DOCKER_USERNAME }}/nextjs:dev
        docker push ${{ secrets.DOCKER_USERNAME }}/nestjs:dev

    # 7. SSH into the server and pull the new Docker images, then restart services
    - name: SSH and Deploy to Server
      uses: appleboy/ssh-action@v0.1.6
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: ${{ secrets.SERVER_PORT }}
        script: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/nextjs:dev
          docker pull ${{ secrets.DOCKER_USERNAME }}/nestjs:dev
          cd /home/ubuntu
          docker-compose down
          docker-compose up --build -d
